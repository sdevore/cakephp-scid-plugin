<?php $this->start('tb_actions'); ?>
{% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}
<li><?= $this->Html->link(__('New {{ singularHumanName }}'), ['action' => 'add'], ['class' => 'nav-link']) ?></li>
{% set done = [] %}
{% for type, data in associations %}
    {% for alias, details in data %}
        {% if details.navLink and details.controller is not same as(_view.name) and details.controller not in done %}
            <li><?= $this->Html->link(__('List {{ alias|underscore|humanize }}'), ['controller' => '{{ details.controller }}', 'action' => 'index'], ['class' => 'nav-link']) ?></li>
            <li><?= $this->Html->link(__('New {{ alias|singularize|underscore|humanize }}'), ['controller' => '{{ details.controller }}', 'action' => 'add'], ['class' => 'nav-link']) ?></li>
            {% set done = done|merge([details.controller]) %}
        {% endif %}
    {% endfor %}
{% endfor %}

<?php $this->end(); ?>


<table class="table table-striped table-hover table-sm">
    <thead class="thead-light">
    <tr>
        {% for field in fields %}
            <th scope="col"><?= $this->Paginator->sort('{{ field }}') ?></th>
        {% endfor %}
        <th scope="col" class="actions"><?= __('Actions') ?></th>
    </tr>
    </thead>
    <tbody>
    <?php foreach (${{ pluralVar }} as ${{ singularVar }}): ?>
    <tr>
        {% for field in fields %}
            {% set isKey = false %}
            {% if associations.BelongsTo %}
                {% for alias, details in associations.BelongsTo if field == details.foreignKey %}
                    {% set isKey = true %}
                    <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
                {% endfor %}
            {% endif %}
            {% if isKey is not same as(true) %}
                {% set columnData = Bake.columnData(field, schema) %}
                {% if columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger'] %}
                    <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                {% else %}
                    <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
                {% endif %}
            {% endif %}
        {% endfor %}
        {% set pk = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
        <td class="actions">
                <span class="btn-group">
                <?= $this->Html->button(__('View'), ['action' => 'view', {{ pk|raw }}], ['title' => __('View'), 'class' => 'primary','icon'=>'add']) ?>
                    <?= $this->Html->button(__('Edit'), ['action' => 'edit', {{ pk|raw }}], ['title' => __('Edit'), 'class' => 'info','icon'=>'view']) ?>
                    <?= $this->Form->postButton(__('Delete'), ['action' => 'delete', {{ pk|raw }}], ['confirm' => __('Are you sure you want to delete # {0}?', {{ pk|raw }}), 'title' => __('Delete'), 'class' => 'danger','icon'=>'delete']) ?>
                    </span>
        </td>
    </tr>
    <?php endforeach; ?>
    </tbody>
</table>
<div class="paginator">
    <ul class="pagination">
        <?= $this->Paginator->first('<< ' . __('First')) ?>
        <?= $this->Paginator->prev('< ' . __('Previous')) ?>
        <?= $this->Paginator->numbers(['before' => '', 'after' => '']) ?>
        <?= $this->Paginator->next(__('Next') . ' >') ?>
        <?= $this->Paginator->last(__('Last') . ' >>') ?>
    </ul>
    <p><?= $this->Paginator->counter(['format' => __('Page {{ '{{' }}page{{ '}}' }} of {{ '{{' }}pages{{ '}}' }}, showing {{ '{{' }}current{{ '}}' }} record(s) out of {{ '{{' }}count{{ '}}' }} total')]) ?></p>
</div>
